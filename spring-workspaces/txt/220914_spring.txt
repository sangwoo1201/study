? : 쿼리 스트링
@PathVariable처럼
url에 값을 넘겨주는 방법 중 하나.

url에 값을 넘겨주는 방법
1. pate ex) /emp/{empno}
2. ? ex) /emp?empno=3

url(controller)
 값을 하나 or 둘 넘길 때 path 사용
 여러 값을 넘길 때 queryString 사용

src/main/java : java 소스 (여기서 코딩)
src/main/resources : 
 데이터베이스 연결 정보 (id, password)
 SQL,CSS,images,Javascript....

Spring 으로 데이터베이스 연동하는 방법.
1. gradle에 데이터베이스 라이브러리 추가(데이터베이스 라이브러리 => jdbc.jar 요런 것들)
 1-1. 구글에 maven mysql 검색한다.
 1-2. https://mvnrepository.com/ 접속.
 1-3. mysql gradle용 복사.
 1-4. build.gradle에 붙여넣기.
	JDBC 문제점
	1. sql요청을 할 때 마다 jdbc에 재로그인.
	2. ORM(Object Relational Mapping)
	3. JAVA ORM 종류 Mybatis, JPA
 1-5. mvnrepository에서 mybatis를 검색한다.
 1-6. MyBatis Spring Boot Starter 클릭 (4번 째 위치함)
 1-7. mybatis gradle용 복사
 1-8. build.gradle에 붙여넣기.
 1-9. build.gradle 새로고침.
 (끝!)

2. 속성파일에 DB 아이디,비밀번호 작성
 2-1. properties 확장명을 yaml(야믈)으로 수정
 2-2. DB 접속 정보 입력

3. Spring과 Mybatis(ORM) 연결
 3-1. resources경로에 sqlmap 폴더 생성 (new -> Package)
 3-2. sqlmap에 xml파일 생성 (이름은 sqlmapper_(하고싶은이름).xml)
 3-3. 속성파일(yaml)에 sqlmapper_*.xml 경로 작성

4. 결과 확인하기
 4-1. xml에 쿼리 작성
 4-2. com.example.study.mapper에 EmpMapper interface 생성
 4-3. EmpController에 @Autowired import + @Getmapping 생성
 4-4. postman으로 확인!


      /db/emp                                       Mapper위치
       URL요청                                       결과타입
Client ------> Controller <------> Mapper <------> mapper.xml
                                   Interface          SQL
                                   JAVA
