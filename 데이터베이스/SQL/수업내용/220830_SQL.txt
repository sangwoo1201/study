***SQL 실행 순서
from -> where -> group by -> having
 -> select -> order by

-- 08.30(화)
-- group by : 특정 컬럼을 그룹핑 하는 문법
-- job 별로 group by하기
-- group by할 컬럼을 select에도 써주자!
select job as '직책 그룹핑' from emp group by job
-- 입사날짜로 group by
select hiredate from emp group by hiredate
-- 입사날짜를 년도 별로 group by
-- date_format() SQL 내장 함수, 날짜를 원하는대로 포맷팅 해줌.
-- %Y : year(년도), %M : month(월), %D : day(일)
select date_format(hiredate,'%Y') as '입사년도', count(empno) as '사원 수' 
from emp group by date_format(hiredate,'%Y')
-- 문제. 부서별로 그룹핑하고 부서인원 수도 출력하시오.
select deptno as '부서명', count(empno) as '사원 수'
from emp group by deptno
-- 20번 부서를 제외한 나머지 부서 그룹핑!
select deptno from emp where deptno != 20 group by deptno
-- having : group by된 결과를 필터링할 때 사용
-- where : 필터링
-- where조건 안쓰고 having으로 사용하기
-- having과 where 차이점
-- 1. SQL 실행 순서가 다르다.
-- 2. where 조건에 집계함수(count, max, min, avg ...)으로 비교 불가능
-- 3. having은 집계함수 비교 가능
select deptno as '부서 번호', count(empno) as '사원 수'
from emp group by deptno having count(empno) >= 4
-- group by된 결과를 필터링하고 싶을 때 사용
-- 문제 1. 부서별로 급여합계를 그룹핑 하시오.(hint : sum)
select deptno as '부서 번호', sum(sal) as '급여합계' 
from emp group by deptno
-- 문제 2. 문제 1번에서 급여합계가 5000 이상인 부서만 조회
select deptno as '부서 번호', sum(sal) as '급여합계' 
from emp group by deptno having sum(sal) >= 5000
-- 문제 3. 문제 2번에서 10번 30번 부서 제외
select deptno as '부서 번호', sum(sal) as '급여합계' from emp
where deptno != 10 and deptno != 30 group by deptno
having sum(sal) >= 5000
-- 문제 4. 입사날짜를 월별로 그룹핑하고 월별 입사자 수를 출력하시오.
select date_format(hiredate,'%Y %M') as '입사 월', count(ename) as '월별 입사자 수'
from emp group by date_format(hiredate,'%M')
order by hiredate asc
-- 문제 5. 직책별로 그룹핑하고 직책별 평균 급여를 조회하고, 평균 급여가 1000이 넘는
--       직책만 출력하시오. 단,) 직책이 manager는 제외
select job, avg(sal) as '평균 급여' from emp where job != 'manager'
group by job having avg(sal) > 1000
-- 문제 6. 1982년도에 입사한 모든 사원의 정보 조회
select * from emp where date_format(hiredate,'%Y') = 1982
-- 문제 7. 급여가 1500 ~ 2850 사이의 범위에 속하는 사원 이름, 급여, 직책 조회
select ename, sal, job from emp where sal between 1500 and 2850

-- order by : 특정 컬럼을 정렬할 때 사용 (항상 마지막에 실행 됨)
-- 아래 쿼리는 오름차순 (디폴트 값)
select ename, sal from emp order by sal
-- 아래 쿼리는 내림차순
select ename, sal from emp order by sal desc
-- 컬럼 위치로 정렬하기
-- order by는 항상 마지막에 실행되기 때문에 select 컬럼 순서를 알고 있다.
select ename, sal from emp order by 2 desc

-- 총 정리
select deptno, count(empno), sum(sal), avg(sal) 
from emp
where deptno != 10
group by deptno 
having count(empno) >= 3
order by count(empno) desc

## delete, update, insert
-- delete (데이터 삭제)
-- 삭제할 때는 where조건으로 삭제하자
delete from emp
-- truncate 테이블안에 있는 데이터를 초기화 함
truncate table emp
-- commit(완전 저장), rollback(이전 상태로 돌아가기)
-- auto commit을 해제하면 rollback(뒤 돌아가기)으로 돌아갈 수 있음
-- auto commit 설정되어 있으면 rollback 명령어 불가능!